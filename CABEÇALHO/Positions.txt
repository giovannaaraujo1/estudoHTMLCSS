Propriedades Absolutas e relativas no css
Justify-content:


unidades relativas são melhores de usar nos projetos pq elas se adequam a qualquer tipo de dispositivo
a termo de respomsividade.

Aula 07/08
Propriedade position Atividade Flez Frog:
----------------------------------
*Justify-Content e abaixo estão seus valores
flex-start: os itens se alinham no lado esquerdo do contêiner.
flex-end: os itens se alinham no lado direito do contêiner.
center: os itens se alinham no centro do contêiner.
space-between: Os itens são exibidos com espaçamento igual entre eles.
space-around: Os itens são exibidos com espaçamento igual ao redor deles.
-----------------------------------------
*align-items
Agora use itens de alinhamento para ajudar os sapos a chegar ao fundo do lago. Esta propriedade CSS alinha os itens verticalmente e aceita os seguintes valores:

flex-start: os itens se alinham na parte superior do contêiner.
flex-end: os itens se alinham na parte inferior do contêiner.
center: os itens se alinham no centro vertical do contêiner.
baseline: os itens são exibidos na linha de base do contêiner.
Stretched: os itens são esticados para caber no contêiner.

---------------------
The frogs need to get in the same order as their lilypads using flex-direction. This CSS property defines the direction items are placed in the container, and accepts the following values:

row: Items are placed the same as the text direction.
row-reverse: Items are placed opposite to the text direction.
column: Items are placed top to bottom.
column-reverse: Items are placed bottom to top.

As rãs precisam entrar na mesma ordem que suas vitórias-régias usando a direção flexível. 
Essa propriedade CSS define a direção em que os itens são colocados no contêiner e aceita 
os seguintes valores:
linha: os itens são colocados da mesma forma que a direção do texto.
row-reverse: Os itens são colocados opostos à direção do texto.
coluna: Os itens são colocados de cima para baixo.
column-reverse: Os itens são colocados de baixo para cima.
----------------------------------------
Sometimes reversing the row or column order of a container is not enough.
 In these cases, we can apply the order property to individual items.
 By default, items have a value of 0, but we can use this property to also 
set it to a positive or negative integer value (-2, -1, 0, 1, 2).
Use the order property to reorder the frogs according to their lilypads.

Às vezes, inverter a ordem das linhas ou colunas de um contêiner não é suficiente.
 Nesses casos, podemos aplicar a propriedade order a itens individuais. Por padrão, 
os itens têm um valor de 0, mas podemos usar essa propriedade para também defini-la
 como um valor inteiro positivo ou negativo (-2, -1, 0, 1, 2).
Use a propriedade order para reordenar os sapos de acordo com suas vitórias-régias.
----------------------------------------------------
Another property you can apply to individual items is align-self.
 This property accepts the same values as align-items and its value for the specific item.
Outra propriedade que você pode aplicar a itens individuais é o align-self.
 Esta propriedade aceita os mesmos valores de align-items e seu valor para o item específico.

--------------------------------------------------------------------------
Oh no! The frogs are all squeezed onto a single row of lilypads. 
Spread them out using the flex-wrap property, which accepts the following values:

nowrap: Every item is fit to a single line.
wrap: Items wrap around to additional lines.
wrap-reverse: Items wrap around to additional lines in reverse.

Oh não! As rãs estão todas espremidas em uma única fileira de vitórias-régias.
Espalhe-os usando a propriedade flex-wrap, que aceita os seguintes valores:

nowrap: Cada item cabe em uma única linha.
wrap: Os itens são agrupados em linhas adicionais.
wrap-reverse: Os itens são agrupados em linhas adicionais no sentido inverso.

----------------------------------------------------------
The two properties flex-direction and flex-wrap are used so often together
 that the shorthand property flex-flow was created to combine them. 
This shorthand property accepts the value of the two properties separated by a space.
For example, you can use flex-flow: row wrap to set rows and wrap them.
Try using flex-flow to repeat the previous level.

As duas propriedades flex-direction e flex-wrap são usadas com tanta frequência juntas
 que a propriedade abreviada flex-flow foi criada para combiná-las.
 Essa propriedade abreviada aceita o valor das duas propriedades separadas por um espaço.
Por exemplo, você pode usar flex-flow: row wrap para definir linhas e encapsula-las.

Tente usar flex-flow para repetir o nível anterior.
----------------------------------------------------------------
The frogs are spread all over the pond, but the lilypads are bunched at the top.
 You can use align-content to set how multiple lines are spaced apart from each other. This property takes the following values:

flex-start: Lines are packed at the top of the container.
flex-end: Lines are packed at the bottom of the container.
center: Lines are packed at the vertical center of the container.
space-between: Lines display with equal spacing between them.
space-around: Lines display with equal spacing around them.
stretch: Lines are stretched to fit the container.
This can be confusing, but align-content determines the spacing between lines,
 while align-items determines how the items as a whole are aligned within the container. 
When there is only one line, align-content has no effect.
-------------------------------------------------------
Now the current has bunched the lilypads at the bottom.
 Use align-content to guide the frogs there
----------------------------------------------------------
24: The frogs have had a party, but it is time to go home.
 Use a combination of flex-direction and align-content to get them to their lilypads.